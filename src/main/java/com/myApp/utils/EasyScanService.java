package com.myApp.utils;

import java.net.URL;

import javax.annotation.PostConstruct;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.6.2 2015-05-26T19:16:43.189+08:00
 * Generated source version: 2.6.2
 * 
 */

@WebServiceClient(name = "EasyScanService", targetNamespace = "http://impl.infservice.server.webservice.sinosoft.cn")
public class EasyScanService extends Service {

	public final static QName SERVICE = new QName("http://impl.infservice.server.webservice.sinosoft.cn",
			"EasyScanService");
	public final static QName EasyScanServiceHttpEndpoint = new QName(
			"http://impl.infservice.server.webservice.sinosoft.cn", "EasyScanServiceHttpEndpoint");
	public final static QName EasyScanServiceHttpSoap12Endpoint = new QName(
			"http://impl.infservice.server.webservice.sinosoft.cn", "EasyScanServiceHttpSoap12Endpoint");
	public final static QName EasyScanServiceHttpSoap11Endpoint = new QName(
			"http://impl.infservice.server.webservice.sinosoft.cn", "EasyScanServiceHttpSoap11Endpoint");

	private static URL wsdlLocation;

	public static void setLocation(URL _url) {
		wsdlLocation = _url;
	}

	@PostConstruct
	public void prePost() {
		wsdlLocation = null;
	}

	public EasyScanService(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public EasyScanService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public EasyScanService() {
		super(wsdlLocation, SERVICE);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate
	// JAX-WS
	// 2.1
	// compliant code instead.
	public EasyScanService(WebServiceFeature... features) {
		super(wsdlLocation, SERVICE);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS
	// 2.1
	// compliant code instead.
	public EasyScanService(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, SERVICE);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS
	// 2.1
	// compliant code instead.
	public EasyScanService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName);
	}

	/**
	 *
	 * @return returns EasyScanServicePortType
	 */
	@WebEndpoint(name = "EasyScanServiceHttpEndpoint")
	public EasyScanServicePortType getEasyScanServiceHttpEndpoint() {
		return super.getPort(EasyScanServiceHttpEndpoint, EasyScanServicePortType.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns EasyScanServicePortType
	 */
	@WebEndpoint(name = "EasyScanServiceHttpEndpoint")
	public EasyScanServicePortType getEasyScanServiceHttpEndpoint(WebServiceFeature... features) {
		return super.getPort(EasyScanServiceHttpEndpoint, EasyScanServicePortType.class, features);
	}

	/**
	 *
	 * @return returns EasyScanServicePortType
	 */
	@WebEndpoint(name = "EasyScanServiceHttpSoap12Endpoint")
	public EasyScanServicePortType getEasyScanServiceHttpSoap12Endpoint() {
		return super.getPort(EasyScanServiceHttpSoap12Endpoint, EasyScanServicePortType.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns EasyScanServicePortType
	 */
	@WebEndpoint(name = "EasyScanServiceHttpSoap12Endpoint")
	public EasyScanServicePortType getEasyScanServiceHttpSoap12Endpoint(WebServiceFeature... features) {
		return super.getPort(EasyScanServiceHttpSoap12Endpoint, EasyScanServicePortType.class, features);
	}

	/**
	 *
	 * @return returns EasyScanServicePortType
	 */
	@WebEndpoint(name = "EasyScanServiceHttpSoap11Endpoint")
	public EasyScanServicePortType getEasyScanServiceHttpSoap11Endpoint() {
		return super.getPort(EasyScanServiceHttpSoap11Endpoint, EasyScanServicePortType.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns EasyScanServicePortType
	 */
	@WebEndpoint(name = "EasyScanServiceHttpSoap11Endpoint")
	public EasyScanServicePortType getEasyScanServiceHttpSoap11Endpoint(WebServiceFeature... features) {
		return super.getPort(EasyScanServiceHttpSoap11Endpoint, EasyScanServicePortType.class, features);
	}

}
